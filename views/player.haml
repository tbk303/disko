!!!
%head
  %title= "Disko Player #{App::VERSION}"

  %link{rel: "stylesheet", href: "/css/bootstrap.min.css"}
  %script{src: "//code.jquery.com/jquery-1.12.0.min.js"}
  %script{src: "//cdn.opalrb.org/opal/0.9.2/opal.min.js"}
  %script{src: "//cdn.opalrb.org/opal/0.9.2/opal-parser.min.js"}

  :sass
    body
      background-color: #555
      padding: 15px
      color: white

    .row
      margin-bottom: 15px

    textarea, input[type=text]
      font-family: monospace

    #name
      margin-bottom: 15px

    #patterns .col-sm-3
      margin-bottom: 15px

    button
      min-height: 5em

    .pattern
      position: relative
      padding: 0
      min-height: 5em

      canvas
        position: absolute
        left: 0
        top: 0

%body

  .row
    .col-sm-1
      %h2 PGM

    .col-sm-8
      #pgm.btn.btn-default.btn-block.pattern
        %canvas

    .col-sm-3
      .row
        .col-sm-3
          %button#slower.btn.btn-block -
        .col-sm-3
          %h2#speed.text-center
            1.0
        .col-sm-3
          %button#faster.btn.btn-block +

  .row
    .col-sm-1
      %h2 PVW

    .col-sm-8
      #pvw.btn.btn-default.btn-block.pattern
        %canvas

    .col-sm-3
      .row
        .col-sm-6
          %button#edit.btn.btn-block.btn-primary Edit
        .col-sm-6
          %button#take.btn.btn-block.btn-danger Take

  .row
    #editor{style: 'display:none;'}
      .col-sm-8
        %textarea#render.form-control{name: 'name', cols: 80, rows: 7}
      .col-sm-4
        %input#name.form-control{type: 'text', name: 'name', placeholder: 'Name'}
        .row
          .col-sm-6
            %button.btn.btn-block.btn-success#preview Preview
          .col-sm-6
            %button.btn.btn-block.btn-warning#store Save

  .row
    #patterns

  :coffeescript
    Opal.load('opal-parser')

    String::startsWith ?= (s) -> @slice(0, s.length) == s
    String::endsWith   ?= (s) -> s == '' or @slice(-s.length) == s

    mode = 'play'

    speedFactor = 1.0

    evalRb = (code) ->
      Opal.eval "Proc.new{|x,t| " + code + "}"

    toggleMode = () ->
      if mode == 'play'
        mode = 'edit'
        $('#editor').slideDown(100)
        $(this).removeClass 'btn-primary'
        $(this).addClass 'btn-info'
      else
        if mode == 'edit'
          mode = 'play'
          $('#editor').slideUp(100)
          $(this).removeClass 'btn-info'
          $(this).addClass 'btn-primary'

    preview = () ->
      evaled = evalRb $('#render').val()
      $('#pvw').data 'evaled', evaled
      $('#pvw').data 'render', $('#render').val()


    select = () ->
      name = $(this).data 'name'
      evaled = $(this).data 'evaled'
      render = $(this).data 'render'

      $('#pvw').data 'name', name
      $('#pvw').data 'evaled', evaled
      $('#pvw').data 'render', render
      $('#render').val(render)
      $('#name').val(name)

    take = () ->
      if $('#name').val()
        $('#pgm').data 'name', $('#pvw').data('name')
        $('#pgm').data 'evaled', $('#pvw').data('evaled')
        $('#pgm').data 'render', $('#pvw').data('render')
        $.ajax '/play',
          data: {render: $('#pgm').data('render')}
          method: 'PUT'

    refreshPatterns = () ->
      $('#patterns').empty()

      $.get '/patterns', (data) ->
        $.each data, (index, value) ->
          evaled = evalRb value.render
          col = $('<div class="col-sm-3"></div>')
          button = $('<button class="btn btn-block pattern"><canvas/></button>')
          button.data 'name', value.name
          button.data 'evaled', evaled
          button.data 'render', value.render
          button.on 'click', select
          col.append(button)
          $('#patterns').append(col)

    store = () ->
      $.post '/store', {
        'name': $('#name').val(),
        'render': $('#pvw').data('render'),
        refreshPatterns
      }

    renderPattern = (pattern, time) ->
      canvas = pattern.find('canvas').get(0)
      canvas.style.width ='100%'
      canvas.style.height='100%'
      canvas.width  = canvas.offsetWidth
      canvas.height = canvas.offsetHeight

      context = canvas.getContext('2d')
      evaled = pattern.data 'evaled'

      if evaled?
        for i in [0..canvas.width] by 2
          color = evaled(time, i/canvas.width)
          style = 'rgb(' + (color[0] * 255.0).toFixed() + ',' + (color[1] * 255.0).toFixed() + ',' + (color[2] * 255.0).toFixed() + ')'
          context.fillStyle = style
          context.fillRect i, 0, 2, canvas.height

    increaseSpeed = () ->
      speedFactor += 0.1
      speedFactor = Math.min speedFactor, 10.0
      $('#speed').text Math.round(speedFactor * 10.0) / 10.0
      $.ajax '/speed',
        data: {speedFactor: speedFactor}
        method: 'PUT'

    decreaseSpeed = () ->
      speedFactor -= 0.1
      speedFactor = Math.max speedFactor, 0.0
      $('#speed').text Math.round(speedFactor * 10.0) / 10.0
      $.ajax '/speed',
        data: {speedFactor: speedFactor}
        method: 'PUT'

    $ ->
      refreshPatterns()

      $('#preview').on 'click', preview
      $('#store').on 'click', store
      $('#edit').on 'click', toggleMode
      $('#take').on 'click', take
      $('#faster').on 'click', increaseSpeed
      $('#slower').on 'click', decreaseSpeed

      renderTime = 0.0
      previewTime = 0.0

      renderLoop = () ->
        setTimeout () ->
          renderTime += 0.0333 * speedFactor
          if renderTime > 1.0 then renderTime = 0.0

          renderPattern $('#pgm'), renderTime
          renderPattern $('#pvw'), renderTime

          window.requestAnimationFrame(renderLoop)
        , 33

      previewLoop = () ->
        setTimeout () ->
          previewTime += 0.1 * speedFactor
          if previewTime > 1.0 then previewTime = 0.0
          $('#patterns .pattern').each (_) ->
            renderPattern $(this), previewTime

          window.requestAnimationFrame(previewLoop)
        , 100

      renderLoop(0)
      previewLoop(0)

